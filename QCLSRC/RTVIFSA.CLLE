PGM PARM(&IFSFILE &MODE &INODE &NLINKS &USERID &GROUPID &SIZE +
    &ADATE &ATIME &MDATE &MTIME &CDATE &CTIME &DEVICE &BSIZE +
    &ASIZE &OBJTYPE &CODEPAGE &TEXT)

/* PARAMETERS */
   DCL VAR(&IFSFILE) TYPE(*CHAR) LEN(100)
   DCL VAR(&MODE) TYPE(*DEC) LEN(10 0)
   DCL VAR(&INODE) TYPE(*DEC) LEN(10 0)
   DCL VAR(&NLINKS) TYPE(*DEC) LEN(5 0)
   DCL VAR(&USERID) TYPE(*DEC) LEN(10 0)
   DCL VAR(&GROUPID) TYPE(*DEC) LEN(10 0)
   DCL VAR(&SIZE) TYPE(*DEC) LEN(10 0)
   DCL VAR(&ADATE) TYPE(*CHAR) LEN(7)
   DCL VAR(&ATIME) TYPE(*CHAR) LEN(6)
   DCL VAR(&MDATE) TYPE(*CHAR) LEN(7)
   DCL VAR(&MTIME) TYPE(*CHAR) LEN(6)
   DCL VAR(&CDATE) TYPE(*CHAR) LEN(7)
   DCL VAR(&CTIME) TYPE(*CHAR) LEN(6)
   DCL VAR(&DEVICE) TYPE(*DEC) LEN(10 0)
   DCL VAR(&BSIZE) TYPE(*DEC) LEN(10 0)
   DCL VAR(&ASIZE) TYPE(*DEC) LEN(10 0)
   DCL VAR(&OBJTYPE) TYPE(*CHAR) LEN(12)
   DCL VAR(&CODEPAGE) TYPE(*DEC) LEN(10 0)
   DCL VAR(&TEXT) TYPE(*CHAR) LEN(50)

/* WORK VARIABLES FOR ALL RETURNING VALUES FROM THE RPG PROGRAM */
   DCL VAR(&WMODE) TYPE(*DEC) LEN(10 0)
   DCL VAR(&WINODE) TYPE(*DEC) LEN(10 0)
   DCL VAR(&WNLINKS) TYPE(*DEC) LEN(5 0)
   DCL VAR(&WUSERID) TYPE(*DEC) LEN(10 0)
   DCL VAR(&WGROUPID) TYPE(*DEC) LEN(10 0)
   DCL VAR(&WSIZE) TYPE(*DEC) LEN(10 0)
   DCL VAR(&WADATE) TYPE(*CHAR) LEN(7)
   DCL VAR(&WATIME) TYPE(*CHAR) LEN(6)
   DCL VAR(&WMDATE) TYPE(*CHAR) LEN(7)
   DCL VAR(&WMTIME) TYPE(*CHAR) LEN(6)
   DCL VAR(&WCDATE) TYPE(*CHAR) LEN(7)
   DCL VAR(&WCTIME) TYPE(*CHAR) LEN(6)
   DCL VAR(&WDEVICE) TYPE(*DEC) LEN(10 0)
   DCL VAR(&WBSIZE) TYPE(*DEC) LEN(10 0)
   DCL VAR(&WASIZE) TYPE(*DEC) LEN(10 0)
   DCL VAR(&WOBJTYPE) TYPE(*CHAR) LEN(12)
   DCL VAR(&WCODEPAGE) TYPE(*DEC) LEN(10 0)
   DCL VAR(&WTEXT) TYPE(*CHAR) LEN(50)

/* OTHER VARIABLES */
   DCL VAR(&ERROR) TYPE(*LGL) LEN(1) VALUE('0') /* 0=NO ERROR, 1=ERROR */

/* MCH3601 HAPPENS IF A VARIABLE IS NOT PASSED TO RECEIVE THE VALUE */
   MONMSG MSGID(MCH3601)

/* CALL THE RPG PROGRAM TO DO THE STAT() CALL, USING WORK VARIABLES. */
   CALL PGM(RTVIFSA2) PARM(&IFSFILE &WMODE &WINODE &WNLINKS &WUSERID +
      &WGROUPID &WSIZE &WADATE &WATIME &WMDATE &WMTIME &WCDATE &WCTIME +
      &WDEVICE &WBSIZE &WASIZE &WOBJTYPE &WCODEPAGE &ERROR &WTEXT)
   IF COND(&ERROR *EQ '1') THEN(DO)
      SNDPGMMSG MSGID(CPF9898) MSGTYPE(*ESCAPE) MSGF(QCPFMSG) +
      MSGDTA('RTVIFSA HAD A PROBLEM.')
      RETURN
   ENDDO

/* UPDATE THE INCOMING VARIABLES */
   CHGVAR VAR(&MODE) VALUE(&WMODE)
   CHGVAR VAR(&INODE) VALUE(&WINODE)
   CHGVAR VAR(&NLINKS) VALUE(&WNLINKS)
   CHGVAR VAR(&USERID) VALUE(&WUSERID)
   CHGVAR VAR(&GROUPID) VALUE(&WGROUPID)
   CHGVAR VAR(&SIZE) VALUE(&WSIZE)
   CHGVAR VAR(&ADATE) VALUE(&WADATE)
   CHGVAR VAR(&ATIME) VALUE(&WATIME)
   CHGVAR VAR(&MDATE) VALUE(&WMDATE)
   CHGVAR VAR(&MTIME) VALUE(&WMTIME)
   CHGVAR VAR(&CDATE) VALUE(&WCDATE)
   CHGVAR VAR(&CTIME) VALUE(&WCTIME)
   CHGVAR VAR(&DEVICE) VALUE(&WDEVICE)
   CHGVAR VAR(&BSIZE) VALUE(&WBSIZE)
   CHGVAR VAR(&ASIZE) VALUE(&WASIZE)
   CHGVAR VAR(&OBJTYPE) VALUE(&WOBJTYPE)
   CHGVAR VAR(&CODEPAGE) VALUE(&WCODEPAGE)
   CHGVAR VAR(&TEXT) VALUE(&WTEXT)

ENDPGM
